<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
    
<mapper namespace = "member.dao.MemberDAO"> 
	<!-- 
			namespace에 뭘 적어준거더라... 내마음대로 적는거였나? 
			==> 맞음. mapper들을 구분하기 위해 적는 것임. 마치 같은 이름의 클래스를 구분하기 위해 패키지가 쓰이는 것처럼
			==> 같은 id를 가지는(가질 수 있는) select, insert 등의 태그를 구분하기 위해 쓰인다.  
	-->


	<!-- 
			자바의 Map이 아니고, Mapping 즉 매핑하는 것임. 
			DB 테이블에는 resi_num이라고 되어있는데, MypageVO에는 resiNum이라고 되어 있음.
			SELECT 한 result set의 컬럼명이 resultType에 있는 객체의 멤버변수와 동일해야 값이 담긴다.
				내부적으로 세터 메소드가 실행되는듯? property 속성은, 속성주입할 때 쓰이는 거니까.
			 column : Select 결과로 나온 Result set의 컬럼명
			 property : 매핑시키고자 하는 resultType에 있는 객체의 멤버변수명.
	-->
	
	<!-- 
			type : type alias를 sqlMapConfig.xml에서 정했음. 원래는 패키지명+자바파일명까지 써줘야 했음. 
			id : resultMap 태그의 id값인듯. (다른 resultMap 태그와 구분하려고 주는 것 같다. 
				  지금은 하나의 테이블에서만 select하니 구분이 필요없지만, 나중에 여러 테이블이 쓰이면 resultMap 태그도 구분이 필요할듯.)
	-->
	<resultMap type="MemberVO" id ="memberMap">
		<result column="resi_num" property ="resiNum"/>
	</resultMap>

	<!-- resultMap 혹은 resultType 둘 중 하나만 써야하는구나. 이때까지 계속 resiNum이 null로 나왔는데, 이제야 해결함. -->
	<select id ="login" parameterType="MemberVO" resultMap = "memberMap">
	<!-- <select id ="login" parameterType="MemberVO" resultType="MemberVO"> -->
		
		SELECT RESI_NUM, ID, PASSWORD
		FROM MEMBER_TEST01
		WHERE ID = #{id} AND PASSWORD = #{password}
		
		<!-- 
		select id, password, type
		from t_member
		where id = #{id} and password = #{password} 
		-->
	
	</select>

</mapper>
