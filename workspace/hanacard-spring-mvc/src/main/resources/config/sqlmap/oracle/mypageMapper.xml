<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 
			namespace에 뭘 적어준거더라... 내마음대로 적는거였나? 
			==> 맞음. mapper들을 구분하기 위해 적는 것임. 마치 같은 이름의 클래스를 구분하기 위해 패키지가 쓰이는 것처럼
			==> 같은 id를 가지는(가질 수 있는) select, insert 등의 태그를 구분하기 위해 쓰인다.  
			
			반복되는 문장 <sql>에 담을 수 있다. include로 활용 가능. 이를 적극 활용하자. 수업 코드 블로그에 있으니 참조하여 작성 하기.
-->
<mapper namespace ="mypage.dao.MypageDAO">

	<!-- 
			type : type alias를 sqlMapConfig.xml에서 정했음. 원래는 패키지명+자바파일명까지 써줘야 했음. 
			id : resultMap 태그의 id값인듯. (다른 resultMap 태그와 구분하려고 주는 것 같다. 
				  지금은 하나의 테이블에서만 select하니 구분이 필요없지만, 나중에 여러 테이블이 쓰이면 resultMap 태그도 구분이 필요할듯.)
	-->
	<!-- <resultMap type="MypageVO" id ="mypageMap">
		<result column="resi_num" property ="regiNum"/>
	</resultMap> -->

	<!-- resultMap 혹은 resultType 둘 중 하나만 써야함 -->
	<!-- 파라미터 resiNum으로 들어온다. 파라미터 입력하는걸로 다시 수정해야 함. -->
	<select id = "getTopCurrentYear" parameterType = "String" resultType ="MypageVO">
		WITH WHOLE AS (SELECT T.CARD_TRANSACTION_TIME, T.CARD_TRANSACTION_CONTENT, T.CARD_TRANSACTION_AMOUNT, 
                        (SELECT VALUE FROM COMMON_CODE WHERE CODE = T.PAYMENT) AS PAYMENT, (SELECT L.CARD_PRODUCT_NAME 
                                                                                    FROM CARD_PRODUCT_LIST L 
                                                                                    WHERE L.CARD_PRODUCT_CODE = (SELECT C.CARD_PRODUCT_CODE
                                                                                                                FROM CARD_CONTRACT C
                                                                                                                WHERE C.CARD_NUM = T.CARD_NUM)
                                                                                    ) AS MEANS
            FROM CARD_TRANSACTION T 
            WHERE CARD_NUM IN(SELECT CARD_NUM FROM CARD_CONTRACT WHERE RESI_NUM = #{resiNum})
            ORDER BY CARD_TRANSACTION_TIME)
		
		SELECT SUBQUERY1.NUM AS "jan", SUBQUERY2.NUM AS "feb", SUBQUERY3.NUM AS "mar", SUBQUERY4.NUM AS "apr",
		        SUBQUERY5.NUM AS "may", SUBQUERY6.NUM AS "jun", SUBQUERY7.NUM AS "jul", SUBQUERY8.NUM AS "aug",
		        SUBQUERY9.NUM AS "sept", SUBQUERY10.NUM AS "oct", SUBQUERY11.NUM AS "nov", SUBQUERY12.NUM AS "dec"
		FROM (SELECT * 
		       FROM (SELECT SUM(CARD_TRANSACTION_AMOUNT) AS NUM
		             FROM WHOLE
		             GROUP BY TO_CHAR(CARD_TRANSACTION_TIME, 'YYYY-MM')
		             HAVING TO_CHAR(CARD_TRANSACTION_TIME, 'YYYY-MM') = (SELECT TO_CHAR(SYSDATE, 'YYYY')||'-01' FROM DUAL)
		             
		             UNION ALL
		             
		             -- SELECT NULL AS NUM
		             SELECT 0 AS NUM
		             FROM DUAL)
		       WHERE NUM IS NOT NULL OR ROWNUM = 1) SUBQUERY1,
		      
		     (SELECT * 
		       FROM (SELECT SUM(CARD_TRANSACTION_AMOUNT) AS NUM
		             FROM WHOLE
		             GROUP BY TO_CHAR(CARD_TRANSACTION_TIME, 'YYYY-MM')
		             HAVING TO_CHAR(CARD_TRANSACTION_TIME, 'YYYY-MM') = (SELECT TO_CHAR(SYSDATE, 'YYYY')||'-02' FROM DUAL)
		             
		             UNION ALL
		             
		             -- SELECT NULL AS NUM
		             SELECT 0 AS NUM
		             FROM DUAL)
		       WHERE NUM IS NOT NULL OR ROWNUM = 1) SUBQUERY2,
		      
		     (SELECT * 
		       FROM (SELECT SUM(CARD_TRANSACTION_AMOUNT) AS NUM
		             FROM WHOLE
		             GROUP BY TO_CHAR(CARD_TRANSACTION_TIME, 'YYYY-MM')
		             HAVING TO_CHAR(CARD_TRANSACTION_TIME, 'YYYY-MM') = (SELECT TO_CHAR(SYSDATE, 'YYYY')||'-03' FROM DUAL)
		             
		             UNION ALL
		             
		             -- SELECT NULL AS NUM
		             SELECT 0 AS NUM
		             FROM DUAL)
		       WHERE NUM IS NOT NULL OR ROWNUM = 1) SUBQUERY3,
		      
		     (SELECT * 
		       FROM (SELECT SUM(CARD_TRANSACTION_AMOUNT) AS NUM
		             FROM WHOLE
		             GROUP BY TO_CHAR(CARD_TRANSACTION_TIME, 'YYYY-MM')
		             HAVING TO_CHAR(CARD_TRANSACTION_TIME, 'YYYY-MM') = (SELECT TO_CHAR(SYSDATE, 'YYYY')||'-04' FROM DUAL)
		             
		             UNION ALL
		             
		             -- SELECT NULL AS NUM
		             SELECT 0 AS NUM
		             FROM DUAL)
		       WHERE NUM IS NOT NULL OR ROWNUM = 1) SUBQUERY4,
		      
		     (SELECT * 
		       FROM (SELECT SUM(CARD_TRANSACTION_AMOUNT) AS NUM
		             FROM WHOLE
		             GROUP BY TO_CHAR(CARD_TRANSACTION_TIME, 'YYYY-MM')
		             HAVING TO_CHAR(CARD_TRANSACTION_TIME, 'YYYY-MM') = (SELECT TO_CHAR(SYSDATE, 'YYYY')||'-05' FROM DUAL)
		             
		             UNION ALL
		             
		             -- SELECT NULL AS NUM
		             SELECT 0 AS NUM
		             FROM DUAL)
		       WHERE NUM IS NOT NULL OR ROWNUM = 1) SUBQUERY5,
		      
		     (SELECT * 
		       FROM (SELECT SUM(CARD_TRANSACTION_AMOUNT) AS NUM
		             FROM WHOLE
		             GROUP BY TO_CHAR(CARD_TRANSACTION_TIME, 'YYYY-MM')
		             HAVING TO_CHAR(CARD_TRANSACTION_TIME, 'YYYY-MM') = (SELECT TO_CHAR(SYSDATE, 'YYYY')||'-06' FROM DUAL)
		             
		             UNION ALL
		             
		             -- SELECT NULL AS NUM
		             SELECT 0 AS NUM
		             FROM DUAL)
		       WHERE NUM IS NOT NULL OR ROWNUM = 1) SUBQUERY6,
		      
		     (SELECT * 
		       FROM (SELECT SUM(CARD_TRANSACTION_AMOUNT) AS NUM
		             FROM WHOLE
		             GROUP BY TO_CHAR(CARD_TRANSACTION_TIME, 'YYYY-MM')
		             HAVING TO_CHAR(CARD_TRANSACTION_TIME, 'YYYY-MM') = (SELECT TO_CHAR(SYSDATE, 'YYYY')||'-07' FROM DUAL)
		             
		             UNION ALL
		             
		             -- SELECT NULL AS NUM
		             SELECT 0 AS NUM
		             FROM DUAL)
		       WHERE NUM IS NOT NULL OR ROWNUM = 1) SUBQUERY7,
		      
		     (SELECT * 
		       FROM (SELECT SUM(CARD_TRANSACTION_AMOUNT) AS NUM
		             FROM WHOLE
		             GROUP BY TO_CHAR(CARD_TRANSACTION_TIME, 'YYYY-MM')
		             HAVING TO_CHAR(CARD_TRANSACTION_TIME, 'YYYY-MM') = (SELECT TO_CHAR(SYSDATE, 'YYYY')||'-08' FROM DUAL)
		             
		             UNION ALL
		             
		             -- SELECT NULL AS NUM
		             SELECT 0 AS NUM
		             FROM DUAL)
		       WHERE NUM IS NOT NULL OR ROWNUM = 1) SUBQUERY8,
		      
		     (SELECT * 
		       FROM (SELECT SUM(CARD_TRANSACTION_AMOUNT) AS NUM
		             FROM WHOLE
		             GROUP BY TO_CHAR(CARD_TRANSACTION_TIME, 'YYYY-MM')
		             HAVING TO_CHAR(CARD_TRANSACTION_TIME, 'YYYY-MM') = (SELECT TO_CHAR(SYSDATE, 'YYYY')||'-09' FROM DUAL)
		             
		             UNION ALL
		             
		             -- SELECT NULL AS NUM
		             SELECT 0 AS NUM
		             FROM DUAL)
		       WHERE NUM IS NOT NULL OR ROWNUM = 1) SUBQUERY9,
		      
		     (SELECT * 
		       FROM (SELECT SUM(CARD_TRANSACTION_AMOUNT) AS NUM
		             FROM WHOLE
		             GROUP BY TO_CHAR(CARD_TRANSACTION_TIME, 'YYYY-MM')
		             HAVING TO_CHAR(CARD_TRANSACTION_TIME, 'YYYY-MM') = (SELECT TO_CHAR(SYSDATE, 'YYYY')||'-10' FROM DUAL)
		             
		             UNION ALL
		             
		             -- SELECT NULL AS NUM
		             SELECT 0 AS NUM
		             FROM DUAL)
		       WHERE NUM IS NOT NULL OR ROWNUM = 1) SUBQUERY10,
		      
		     (SELECT * 
		       FROM (SELECT SUM(CARD_TRANSACTION_AMOUNT) AS NUM
		             FROM WHOLE
		             GROUP BY TO_CHAR(CARD_TRANSACTION_TIME, 'YYYY-MM')
		             HAVING TO_CHAR(CARD_TRANSACTION_TIME, 'YYYY-MM') = (SELECT TO_CHAR(SYSDATE, 'YYYY')||'-11' FROM DUAL)
		             
		             UNION ALL
		             
		             -- SELECT NULL AS NUM
		             SELECT 0 AS NUM
		             FROM DUAL)
		       WHERE NUM IS NOT NULL OR ROWNUM = 1) SUBQUERY11,
		      
		     (SELECT * 
		       FROM (SELECT SUM(CARD_TRANSACTION_AMOUNT) AS NUM
		             FROM WHOLE
		             GROUP BY TO_CHAR(CARD_TRANSACTION_TIME, 'YYYY-MM')
		             HAVING TO_CHAR(CARD_TRANSACTION_TIME, 'YYYY-MM') = (SELECT TO_CHAR(SYSDATE, 'YYYY')||'-12' FROM DUAL)
		             
		             UNION ALL
		             
		             -- SELECT NULL AS NUM
		             SELECT 0 AS NUM
		             FROM DUAL)
		       WHERE NUM IS NOT NULL OR ROWNUM = 1) SUBQUERY12
		WHERE ROWNUM = 1
		<!-- 세미콜론 쓰지 않는 것에 주의! 또한 ROWNUM <=1 하니까 빨간 밑줄 뜬다. 에러는 안나겠지만, 그냥 등호(=)로 바꿔줌. -->
	
	</select>

	<select id = "getTopCurrentYearOpen" parameterType = "map" resultType ="MypageVO">
		WITH WHOLE AS (SELECT T.CARD_TRANSACTION_TIME, T.CARD_TRANSACTION_CONTENT, T.CARD_TRANSACTION_AMOUNT, T.PAYMENT, (SELECT L.CARD_PRODUCT_NAME 
                                                                FROM CARD_PRODUCT_LIST L 
                                                                WHERE L.CARD_PRODUCT_CODE = (SELECT C.CARD_PRODUCT_CODE
                                                                                            FROM CARD_CONTRACT C
                                                                                            WHERE C.CARD_NUM = T.CARD_NUM)
                                                                ) AS MEANS
            FROM CARD_TRANSACTION T WHERE CARD_NUM IN (SELECT CARD_NUM FROM CARD_CONTRACT WHERE RESI_NUM = #{resiNum})
            
            UNION ALL 
            
            SELECT CARD_TRANSACTION_TIME, CARD_TRANSACTION_CONTENT, CARD_TRANSACTION_AMOUNT, PAYMENT, MEANS
            FROM OPEN_CARD_TRANSACTION
            WHERE RESI_NUM = #{resiNum} AND MEANS IN (${cardListString}) <!-- $ # 차이가 있음! java 단에서 싱글쿼테이션 붙여서 날라오기 때문에 $ 쓴다. -->
            
            ORDER BY CARD_TRANSACTION_TIME)
		SELECT SUBQUERY1.NUM AS "jan", SUBQUERY2.NUM AS "feb", SUBQUERY3.NUM AS "mar", SUBQUERY4.NUM AS "apr",
		        SUBQUERY5.NUM AS "may", SUBQUERY6.NUM AS "jun", SUBQUERY7.NUM AS "jul", SUBQUERY8.NUM AS "aug",
		        SUBQUERY9.NUM AS "sept", SUBQUERY10.NUM AS "oct", SUBQUERY11.NUM AS "nov", SUBQUERY12.NUM AS "dec"
		FROM (SELECT * 
		       FROM (SELECT SUM(CARD_TRANSACTION_AMOUNT) AS NUM
		             FROM WHOLE
		             GROUP BY TO_CHAR(CARD_TRANSACTION_TIME, 'YYYY-MM')
		             HAVING TO_CHAR(CARD_TRANSACTION_TIME, 'YYYY-MM') = (SELECT TO_CHAR(SYSDATE, 'YYYY')||'-01' FROM DUAL)
		             
		             UNION ALL
		             
		             -- SELECT NULL AS NUM
		             SELECT 0 AS NUM
		             FROM DUAL)
		       WHERE NUM IS NOT NULL OR ROWNUM = 1) SUBQUERY1,
		      
		     (SELECT * 
		       FROM (SELECT SUM(CARD_TRANSACTION_AMOUNT) AS NUM
		             FROM WHOLE
		             GROUP BY TO_CHAR(CARD_TRANSACTION_TIME, 'YYYY-MM')
		             HAVING TO_CHAR(CARD_TRANSACTION_TIME, 'YYYY-MM') = (SELECT TO_CHAR(SYSDATE, 'YYYY')||'-02' FROM DUAL)
		             
		             UNION ALL
		             
		             -- SELECT NULL AS NUM
		             SELECT 0 AS NUM
		             FROM DUAL)
		       WHERE NUM IS NOT NULL OR ROWNUM = 1) SUBQUERY2,
		      
		     (SELECT * 
		       FROM (SELECT SUM(CARD_TRANSACTION_AMOUNT) AS NUM
		             FROM WHOLE
		             GROUP BY TO_CHAR(CARD_TRANSACTION_TIME, 'YYYY-MM')
		             HAVING TO_CHAR(CARD_TRANSACTION_TIME, 'YYYY-MM') = (SELECT TO_CHAR(SYSDATE, 'YYYY')||'-03' FROM DUAL)
		             
		             UNION ALL
		             
		             -- SELECT NULL AS NUM
		             SELECT 0 AS NUM
		             FROM DUAL)
		       WHERE NUM IS NOT NULL OR ROWNUM = 1) SUBQUERY3,
		      
		     (SELECT * 
		       FROM (SELECT SUM(CARD_TRANSACTION_AMOUNT) AS NUM
		             FROM WHOLE
		             GROUP BY TO_CHAR(CARD_TRANSACTION_TIME, 'YYYY-MM')
		             HAVING TO_CHAR(CARD_TRANSACTION_TIME, 'YYYY-MM') = (SELECT TO_CHAR(SYSDATE, 'YYYY')||'-04' FROM DUAL)
		             
		             UNION ALL
		             
		             -- SELECT NULL AS NUM
		             SELECT 0 AS NUM
		             FROM DUAL)
		       WHERE NUM IS NOT NULL OR ROWNUM = 1) SUBQUERY4,
		      
		     (SELECT * 
		       FROM (SELECT SUM(CARD_TRANSACTION_AMOUNT) AS NUM
		             FROM WHOLE
		             GROUP BY TO_CHAR(CARD_TRANSACTION_TIME, 'YYYY-MM')
		             HAVING TO_CHAR(CARD_TRANSACTION_TIME, 'YYYY-MM') = (SELECT TO_CHAR(SYSDATE, 'YYYY')||'-05' FROM DUAL)
		             
		             UNION ALL
		             
		             -- SELECT NULL AS NUM
		             SELECT 0 AS NUM
		             FROM DUAL)
		       WHERE NUM IS NOT NULL OR ROWNUM = 1) SUBQUERY5,
		      
		     (SELECT * 
		       FROM (SELECT SUM(CARD_TRANSACTION_AMOUNT) AS NUM
		             FROM WHOLE
		             GROUP BY TO_CHAR(CARD_TRANSACTION_TIME, 'YYYY-MM')
		             HAVING TO_CHAR(CARD_TRANSACTION_TIME, 'YYYY-MM') = (SELECT TO_CHAR(SYSDATE, 'YYYY')||'-06' FROM DUAL)
		             
		             UNION ALL
		             
		             -- SELECT NULL AS NUM
		             SELECT 0 AS NUM
		             FROM DUAL)
		       WHERE NUM IS NOT NULL OR ROWNUM = 1) SUBQUERY6,
		      
		     (SELECT * 
		       FROM (SELECT SUM(CARD_TRANSACTION_AMOUNT) AS NUM
		             FROM WHOLE
		             GROUP BY TO_CHAR(CARD_TRANSACTION_TIME, 'YYYY-MM')
		             HAVING TO_CHAR(CARD_TRANSACTION_TIME, 'YYYY-MM') = (SELECT TO_CHAR(SYSDATE, 'YYYY')||'-07' FROM DUAL)
		             
		             UNION ALL
		             
		             -- SELECT NULL AS NUM
		             SELECT 0 AS NUM
		             FROM DUAL)
		       WHERE NUM IS NOT NULL OR ROWNUM = 1) SUBQUERY7,
		      
		     (SELECT * 
		       FROM (SELECT SUM(CARD_TRANSACTION_AMOUNT) AS NUM
		             FROM WHOLE
		             GROUP BY TO_CHAR(CARD_TRANSACTION_TIME, 'YYYY-MM')
		             HAVING TO_CHAR(CARD_TRANSACTION_TIME, 'YYYY-MM') = (SELECT TO_CHAR(SYSDATE, 'YYYY')||'-08' FROM DUAL)
		             
		             UNION ALL
		             
		             -- SELECT NULL AS NUM
		             SELECT 0 AS NUM
		             FROM DUAL)
		       WHERE NUM IS NOT NULL OR ROWNUM = 1) SUBQUERY8,
		      
		     (SELECT * 
		       FROM (SELECT SUM(CARD_TRANSACTION_AMOUNT) AS NUM
		             FROM WHOLE
		             GROUP BY TO_CHAR(CARD_TRANSACTION_TIME, 'YYYY-MM')
		             HAVING TO_CHAR(CARD_TRANSACTION_TIME, 'YYYY-MM') = (SELECT TO_CHAR(SYSDATE, 'YYYY')||'-09' FROM DUAL)
		             
		             UNION ALL
		             
		             -- SELECT NULL AS NUM
		             SELECT 0 AS NUM
		             FROM DUAL)
		       WHERE NUM IS NOT NULL OR ROWNUM = 1) SUBQUERY9,
		      
		     (SELECT * 
		       FROM (SELECT SUM(CARD_TRANSACTION_AMOUNT) AS NUM
		             FROM WHOLE
		             GROUP BY TO_CHAR(CARD_TRANSACTION_TIME, 'YYYY-MM')
		             HAVING TO_CHAR(CARD_TRANSACTION_TIME, 'YYYY-MM') = (SELECT TO_CHAR(SYSDATE, 'YYYY')||'-10' FROM DUAL)
		             
		             UNION ALL
		             
		             -- SELECT NULL AS NUM
		             SELECT 0 AS NUM
		             FROM DUAL)
		       WHERE NUM IS NOT NULL OR ROWNUM = 1) SUBQUERY10,
		      
		     (SELECT * 
		       FROM (SELECT SUM(CARD_TRANSACTION_AMOUNT) AS NUM
		             FROM WHOLE
		             GROUP BY TO_CHAR(CARD_TRANSACTION_TIME, 'YYYY-MM')
		             HAVING TO_CHAR(CARD_TRANSACTION_TIME, 'YYYY-MM') = (SELECT TO_CHAR(SYSDATE, 'YYYY')||'-11' FROM DUAL)
		             
		             UNION ALL
		             
		             -- SELECT NULL AS NUM
		             SELECT 0 AS NUM
		             FROM DUAL)
		       WHERE NUM IS NOT NULL OR ROWNUM = 1) SUBQUERY11,
		      
		     (SELECT * 
		       FROM (SELECT SUM(CARD_TRANSACTION_AMOUNT) AS NUM
		             FROM WHOLE
		             GROUP BY TO_CHAR(CARD_TRANSACTION_TIME, 'YYYY-MM')
		             HAVING TO_CHAR(CARD_TRANSACTION_TIME, 'YYYY-MM') = (SELECT TO_CHAR(SYSDATE, 'YYYY')||'-12' FROM DUAL)
		             
		             UNION ALL
		             
		             -- SELECT NULL AS NUM
		             SELECT 0 AS NUM
		             FROM DUAL)
		       WHERE NUM IS NOT NULL OR ROWNUM = 1) SUBQUERY12
		WHERE ROWNUM = 1
		<!-- 세미콜론 쓰지 않는 것에 주의! 또한 ROWNUM <=1 하니까 빨간 밑줄 뜬다. 에러는 안나겠지만, 그냥 등호(=)로 바꿔줌. -->
	
	</select>
	
	
	<select id = "getTopSpecific" parameterType = "map" resultType ="MypageVO">
		WITH WHOLE AS (SELECT T.CARD_TRANSACTION_TIME, T.CARD_TRANSACTION_CONTENT, T.CARD_TRANSACTION_AMOUNT, 
                        (SELECT VALUE FROM COMMON_CODE WHERE CODE = T.PAYMENT) AS PAYMENT, (SELECT L.CARD_PRODUCT_NAME 
                                                                                    FROM CARD_PRODUCT_LIST L 
                                                                                    WHERE L.CARD_PRODUCT_CODE = (SELECT C.CARD_PRODUCT_CODE
                                                                                                                FROM CARD_CONTRACT C
                                                                                                                WHERE C.CARD_NUM = T.CARD_NUM)
                                                                                    ) AS MEANS
            FROM CARD_TRANSACTION T 
            WHERE CARD_NUM IN(SELECT CARD_NUM FROM CARD_CONTRACT WHERE RESI_NUM = #{resiNum})
            ORDER BY CARD_TRANSACTION_TIME)
		
		SELECT SUBQUERY1.NUM AS "jan", SUBQUERY2.NUM AS "feb", SUBQUERY3.NUM AS "mar", SUBQUERY4.NUM AS "apr",
		        SUBQUERY5.NUM AS "may", SUBQUERY6.NUM AS "jun", SUBQUERY7.NUM AS "jul", SUBQUERY8.NUM AS "aug",
		        SUBQUERY9.NUM AS "sept", SUBQUERY10.NUM AS "oct", SUBQUERY11.NUM AS "nov", SUBQUERY12.NUM AS "dec"
		FROM (SELECT * 
		       FROM (SELECT SUM(CARD_TRANSACTION_AMOUNT) AS NUM
		             FROM WHOLE
		             GROUP BY TO_CHAR(CARD_TRANSACTION_TIME, 'YYYY-MM')
		             HAVING TO_CHAR(CARD_TRANSACTION_TIME, 'YYYY-MM') = (SELECT #{year}||'-01' FROM DUAL)
		             
		             UNION ALL
		             
		             -- SELECT NULL AS NUM
		             SELECT 0 AS NUM
		             FROM DUAL)
		       WHERE NUM IS NOT NULL OR ROWNUM = 1) SUBQUERY1,
		      
		     (SELECT * 
		       FROM (SELECT SUM(CARD_TRANSACTION_AMOUNT) AS NUM
		             FROM WHOLE
		             GROUP BY TO_CHAR(CARD_TRANSACTION_TIME, 'YYYY-MM')
		             HAVING TO_CHAR(CARD_TRANSACTION_TIME, 'YYYY-MM') = (SELECT #{year}||'-02' FROM DUAL)
		             
		             UNION ALL
		             
		             -- SELECT NULL AS NUM
		             SELECT 0 AS NUM
		             FROM DUAL)
		       WHERE NUM IS NOT NULL OR ROWNUM = 1) SUBQUERY2,
		      
		     (SELECT * 
		       FROM (SELECT SUM(CARD_TRANSACTION_AMOUNT) AS NUM
		             FROM WHOLE
		             GROUP BY TO_CHAR(CARD_TRANSACTION_TIME, 'YYYY-MM')
		             HAVING TO_CHAR(CARD_TRANSACTION_TIME, 'YYYY-MM') = (SELECT #{year}||'-03' FROM DUAL)
		             
		             UNION ALL
		             
		             -- SELECT NULL AS NUM
		             SELECT 0 AS NUM
		             FROM DUAL)
		       WHERE NUM IS NOT NULL OR ROWNUM = 1) SUBQUERY3,
		      
		     (SELECT * 
		       FROM (SELECT SUM(CARD_TRANSACTION_AMOUNT) AS NUM
		             FROM WHOLE
		             GROUP BY TO_CHAR(CARD_TRANSACTION_TIME, 'YYYY-MM')
		             HAVING TO_CHAR(CARD_TRANSACTION_TIME, 'YYYY-MM') = (SELECT #{year}||'-04' FROM DUAL)
		             
		             UNION ALL
		             
		             -- SELECT NULL AS NUM
		             SELECT 0 AS NUM
		             FROM DUAL)
		       WHERE NUM IS NOT NULL OR ROWNUM = 1) SUBQUERY4,
		      
		     (SELECT * 
		       FROM (SELECT SUM(CARD_TRANSACTION_AMOUNT) AS NUM
		             FROM WHOLE
		             GROUP BY TO_CHAR(CARD_TRANSACTION_TIME, 'YYYY-MM')
		             HAVING TO_CHAR(CARD_TRANSACTION_TIME, 'YYYY-MM') = (SELECT #{year}||'-05' FROM DUAL)
		             
		             UNION ALL
		             
		             -- SELECT NULL AS NUM
		             SELECT 0 AS NUM
		             FROM DUAL)
		       WHERE NUM IS NOT NULL OR ROWNUM = 1) SUBQUERY5,
		      
		     (SELECT * 
		       FROM (SELECT SUM(CARD_TRANSACTION_AMOUNT) AS NUM
		             FROM WHOLE
		             GROUP BY TO_CHAR(CARD_TRANSACTION_TIME, 'YYYY-MM')
		             HAVING TO_CHAR(CARD_TRANSACTION_TIME, 'YYYY-MM') = (SELECT #{year}||'-06' FROM DUAL)
		             
		             UNION ALL
		             
		             -- SELECT NULL AS NUM
		             SELECT 0 AS NUM
		             FROM DUAL)
		       WHERE NUM IS NOT NULL OR ROWNUM = 1) SUBQUERY6,
		      
		     (SELECT * 
		       FROM (SELECT SUM(CARD_TRANSACTION_AMOUNT) AS NUM
		             FROM WHOLE
		             GROUP BY TO_CHAR(CARD_TRANSACTION_TIME, 'YYYY-MM')
		             HAVING TO_CHAR(CARD_TRANSACTION_TIME, 'YYYY-MM') = (SELECT #{year}||'-07' FROM DUAL)
		             
		             UNION ALL
		             
		             -- SELECT NULL AS NUM
		             SELECT 0 AS NUM
		             FROM DUAL)
		       WHERE NUM IS NOT NULL OR ROWNUM = 1) SUBQUERY7,
		      
		     (SELECT * 
		       FROM (SELECT SUM(CARD_TRANSACTION_AMOUNT) AS NUM
		             FROM WHOLE
		             GROUP BY TO_CHAR(CARD_TRANSACTION_TIME, 'YYYY-MM')
		             HAVING TO_CHAR(CARD_TRANSACTION_TIME, 'YYYY-MM') = (SELECT #{year}||'-08' FROM DUAL)
		             
		             UNION ALL
		             
		             -- SELECT NULL AS NUM
		             SELECT 0 AS NUM
		             FROM DUAL)
		       WHERE NUM IS NOT NULL OR ROWNUM = 1) SUBQUERY8,
		      
		     (SELECT * 
		       FROM (SELECT SUM(CARD_TRANSACTION_AMOUNT) AS NUM
		             FROM WHOLE
		             GROUP BY TO_CHAR(CARD_TRANSACTION_TIME, 'YYYY-MM')
		             HAVING TO_CHAR(CARD_TRANSACTION_TIME, 'YYYY-MM') = (SELECT #{year}||'-09' FROM DUAL)
		             
		             UNION ALL
		             
		             -- SELECT NULL AS NUM
		             SELECT 0 AS NUM
		             FROM DUAL)
		       WHERE NUM IS NOT NULL OR ROWNUM = 1) SUBQUERY9,
		      
		     (SELECT * 
		       FROM (SELECT SUM(CARD_TRANSACTION_AMOUNT) AS NUM
		             FROM WHOLE
		             GROUP BY TO_CHAR(CARD_TRANSACTION_TIME, 'YYYY-MM')
		             HAVING TO_CHAR(CARD_TRANSACTION_TIME, 'YYYY-MM') = (SELECT #{year}||'-10' FROM DUAL)
		             
		             UNION ALL
		             
		             -- SELECT NULL AS NUM
		             SELECT 0 AS NUM
		             FROM DUAL)
		       WHERE NUM IS NOT NULL OR ROWNUM = 1) SUBQUERY10,
		      
		     (SELECT * 
		       FROM (SELECT SUM(CARD_TRANSACTION_AMOUNT) AS NUM
		             FROM WHOLE
		             GROUP BY TO_CHAR(CARD_TRANSACTION_TIME, 'YYYY-MM')
		             HAVING TO_CHAR(CARD_TRANSACTION_TIME, 'YYYY-MM') = (SELECT #{year}||'-11' FROM DUAL)
		             
		             UNION ALL
		             
		             -- SELECT NULL AS NUM
		             SELECT 0 AS NUM
		             FROM DUAL)
		       WHERE NUM IS NOT NULL OR ROWNUM = 1) SUBQUERY11,
		      
		     (SELECT * 
		       FROM (SELECT SUM(CARD_TRANSACTION_AMOUNT) AS NUM
		             FROM WHOLE
		             GROUP BY TO_CHAR(CARD_TRANSACTION_TIME, 'YYYY-MM')
		             HAVING TO_CHAR(CARD_TRANSACTION_TIME, 'YYYY-MM') = (SELECT #{year}||'-12' FROM DUAL)
		             
		             UNION ALL
		             
		             -- SELECT NULL AS NUM
		             SELECT 0 AS NUM
		             FROM DUAL)
		       WHERE NUM IS NOT NULL OR ROWNUM = 1) SUBQUERY12
		WHERE ROWNUM = 1
		<!-- 세미콜론 쓰지 않는 것에 주의! 또한 ROWNUM <=1 하니까 빨간 밑줄 뜬다. 에러는 안나겠지만, 그냥 등호(=)로 바꿔줌. -->
	
	</select>
	
	<select id = "getTopSpecificOpen" parameterType = "map" resultType ="MypageVO">
		WITH WHOLE AS (SELECT T.CARD_TRANSACTION_TIME, T.CARD_TRANSACTION_CONTENT, T.CARD_TRANSACTION_AMOUNT, T.PAYMENT, (SELECT L.CARD_PRODUCT_NAME 
                                                                FROM CARD_PRODUCT_LIST L 
                                                                WHERE L.CARD_PRODUCT_CODE = (SELECT C.CARD_PRODUCT_CODE
                                                                                            FROM CARD_CONTRACT C
                                                                                            WHERE C.CARD_NUM = T.CARD_NUM)
                                                                ) AS MEANS
            FROM CARD_TRANSACTION T WHERE CARD_NUM IN (SELECT CARD_NUM FROM CARD_CONTRACT WHERE RESI_NUM = #{resiNum})
            
            UNION ALL 
            
            SELECT CARD_TRANSACTION_TIME, CARD_TRANSACTION_CONTENT, CARD_TRANSACTION_AMOUNT, PAYMENT, MEANS
            FROM OPEN_CARD_TRANSACTION
            WHERE RESI_NUM = #{resiNum} AND MEANS IN (${cardListString}) <!-- $ # 차이가 있음! java 단에서 싱글쿼테이션 붙여서 날라오기 때문에 $ 쓴다. -->
            
            ORDER BY CARD_TRANSACTION_TIME)
		SELECT SUBQUERY1.NUM AS "jan", SUBQUERY2.NUM AS "feb", SUBQUERY3.NUM AS "mar", SUBQUERY4.NUM AS "apr",
		        SUBQUERY5.NUM AS "may", SUBQUERY6.NUM AS "jun", SUBQUERY7.NUM AS "jul", SUBQUERY8.NUM AS "aug",
		        SUBQUERY9.NUM AS "sept", SUBQUERY10.NUM AS "oct", SUBQUERY11.NUM AS "nov", SUBQUERY12.NUM AS "dec"
		FROM (SELECT * 
		       FROM (SELECT SUM(CARD_TRANSACTION_AMOUNT) AS NUM
		             FROM WHOLE
		             GROUP BY TO_CHAR(CARD_TRANSACTION_TIME, 'YYYY-MM')
		             HAVING TO_CHAR(CARD_TRANSACTION_TIME, 'YYYY-MM') = (SELECT #{year}||'-01' FROM DUAL)
		             
		             UNION ALL
		             
		             -- SELECT NULL AS NUM
		             SELECT 0 AS NUM
		             FROM DUAL)
		       WHERE NUM IS NOT NULL OR ROWNUM = 1) SUBQUERY1,
		      
		     (SELECT * 
		       FROM (SELECT SUM(CARD_TRANSACTION_AMOUNT) AS NUM
		             FROM WHOLE
		             GROUP BY TO_CHAR(CARD_TRANSACTION_TIME, 'YYYY-MM')
		             HAVING TO_CHAR(CARD_TRANSACTION_TIME, 'YYYY-MM') = (SELECT #{year}||'-02' FROM DUAL)
		             
		             UNION ALL
		             
		             -- SELECT NULL AS NUM
		             SELECT 0 AS NUM
		             FROM DUAL)
		       WHERE NUM IS NOT NULL OR ROWNUM = 1) SUBQUERY2,
		      
		     (SELECT * 
		       FROM (SELECT SUM(CARD_TRANSACTION_AMOUNT) AS NUM
		             FROM WHOLE
		             GROUP BY TO_CHAR(CARD_TRANSACTION_TIME, 'YYYY-MM')
		             HAVING TO_CHAR(CARD_TRANSACTION_TIME, 'YYYY-MM') = (SELECT #{year}||'-03' FROM DUAL)
		             
		             UNION ALL
		             
		             -- SELECT NULL AS NUM
		             SELECT 0 AS NUM
		             FROM DUAL)
		       WHERE NUM IS NOT NULL OR ROWNUM = 1) SUBQUERY3,
		      
		     (SELECT * 
		       FROM (SELECT SUM(CARD_TRANSACTION_AMOUNT) AS NUM
		             FROM WHOLE
		             GROUP BY TO_CHAR(CARD_TRANSACTION_TIME, 'YYYY-MM')
		             HAVING TO_CHAR(CARD_TRANSACTION_TIME, 'YYYY-MM') = (SELECT #{year}||'-04' FROM DUAL)
		             
		             UNION ALL
		             
		             -- SELECT NULL AS NUM
		             SELECT 0 AS NUM
		             FROM DUAL)
		       WHERE NUM IS NOT NULL OR ROWNUM = 1) SUBQUERY4,
		      
		     (SELECT * 
		       FROM (SELECT SUM(CARD_TRANSACTION_AMOUNT) AS NUM
		             FROM WHOLE
		             GROUP BY TO_CHAR(CARD_TRANSACTION_TIME, 'YYYY-MM')
		             HAVING TO_CHAR(CARD_TRANSACTION_TIME, 'YYYY-MM') = (SELECT #{year}||'-05' FROM DUAL)
		             
		             UNION ALL
		             
		             -- SELECT NULL AS NUM
		             SELECT 0 AS NUM
		             FROM DUAL)
		       WHERE NUM IS NOT NULL OR ROWNUM = 1) SUBQUERY5,
		      
		     (SELECT * 
		       FROM (SELECT SUM(CARD_TRANSACTION_AMOUNT) AS NUM
		             FROM WHOLE
		             GROUP BY TO_CHAR(CARD_TRANSACTION_TIME, 'YYYY-MM')
		             HAVING TO_CHAR(CARD_TRANSACTION_TIME, 'YYYY-MM') = (SELECT #{year}||'-06' FROM DUAL)
		             
		             UNION ALL
		             
		             -- SELECT NULL AS NUM
		             SELECT 0 AS NUM
		             FROM DUAL)
		       WHERE NUM IS NOT NULL OR ROWNUM = 1) SUBQUERY6,
		      
		     (SELECT * 
		       FROM (SELECT SUM(CARD_TRANSACTION_AMOUNT) AS NUM
		             FROM WHOLE
		             GROUP BY TO_CHAR(CARD_TRANSACTION_TIME, 'YYYY-MM')
		             HAVING TO_CHAR(CARD_TRANSACTION_TIME, 'YYYY-MM') = (SELECT #{year}||'-07' FROM DUAL)
		             
		             UNION ALL
		             
		             -- SELECT NULL AS NUM
		             SELECT 0 AS NUM
		             FROM DUAL)
		       WHERE NUM IS NOT NULL OR ROWNUM = 1) SUBQUERY7,
		      
		     (SELECT * 
		       FROM (SELECT SUM(CARD_TRANSACTION_AMOUNT) AS NUM
		             FROM WHOLE
		             GROUP BY TO_CHAR(CARD_TRANSACTION_TIME, 'YYYY-MM')
		             HAVING TO_CHAR(CARD_TRANSACTION_TIME, 'YYYY-MM') = (SELECT #{year}||'-08' FROM DUAL)
		             
		             UNION ALL
		             
		             -- SELECT NULL AS NUM
		             SELECT 0 AS NUM
		             FROM DUAL)
		       WHERE NUM IS NOT NULL OR ROWNUM = 1) SUBQUERY8,
		      
		     (SELECT * 
		       FROM (SELECT SUM(CARD_TRANSACTION_AMOUNT) AS NUM
		             FROM WHOLE
		             GROUP BY TO_CHAR(CARD_TRANSACTION_TIME, 'YYYY-MM')
		             HAVING TO_CHAR(CARD_TRANSACTION_TIME, 'YYYY-MM') = (SELECT #{year}||'-09' FROM DUAL)
		             
		             UNION ALL
		             
		             -- SELECT NULL AS NUM
		             SELECT 0 AS NUM
		             FROM DUAL)
		       WHERE NUM IS NOT NULL OR ROWNUM = 1) SUBQUERY9,
		      
		     (SELECT * 
		       FROM (SELECT SUM(CARD_TRANSACTION_AMOUNT) AS NUM
		             FROM WHOLE
		             GROUP BY TO_CHAR(CARD_TRANSACTION_TIME, 'YYYY-MM')
		             HAVING TO_CHAR(CARD_TRANSACTION_TIME, 'YYYY-MM') = (SELECT #{year}||'-10' FROM DUAL)
		             
		             UNION ALL
		             
		             -- SELECT NULL AS NUM
		             SELECT 0 AS NUM
		             FROM DUAL)
		       WHERE NUM IS NOT NULL OR ROWNUM = 1) SUBQUERY10,
		      
		     (SELECT * 
		       FROM (SELECT SUM(CARD_TRANSACTION_AMOUNT) AS NUM
		             FROM WHOLE
		             GROUP BY TO_CHAR(CARD_TRANSACTION_TIME, 'YYYY-MM')
		             HAVING TO_CHAR(CARD_TRANSACTION_TIME, 'YYYY-MM') = (SELECT #{year}||'-11' FROM DUAL)
		             
		             UNION ALL
		             
		             -- SELECT NULL AS NUM
		             SELECT 0 AS NUM
		             FROM DUAL)
		       WHERE NUM IS NOT NULL OR ROWNUM = 1) SUBQUERY11,
		      
		     (SELECT * 
		       FROM (SELECT SUM(CARD_TRANSACTION_AMOUNT) AS NUM
		             FROM WHOLE
		             GROUP BY TO_CHAR(CARD_TRANSACTION_TIME, 'YYYY-MM')
		             HAVING TO_CHAR(CARD_TRANSACTION_TIME, 'YYYY-MM') = (SELECT #{year}||'-12' FROM DUAL)
		             
		             UNION ALL
		             
		             -- SELECT NULL AS NUM
		             SELECT 0 AS NUM
		             FROM DUAL)
		       WHERE NUM IS NOT NULL OR ROWNUM = 1) SUBQUERY12
		WHERE ROWNUM = 1
		<!-- 세미콜론 쓰지 않는 것에 주의! 또한 ROWNUM <=1 하니까 빨간 밑줄 뜬다. 에러는 안나겠지만, 그냥 등호(=)로 바꿔줌. -->
	
	</select>
	
	<select id = "getBottomSpecificOri" parameterType = "map" resultType ="MypageVO">
	
		WITH WHOLE AS( SELECT CARD_TRANSACTION_TIME, CARD_TRANSACTION_AMOUNT, CARD_TRANSACTION_CONTENT, INDUSTRY_CODE
		                FROM CARD_TRANSACTION
		                WHERE CARD_NUM IN(SELECT CARD_NUM FROM CARD_CONTRACT WHERE RESI_NUM = #{resiNum})
		                        AND TO_CHAR(CARD_TRANSACTION_TIME, 'YYYY') = #{year} 
		                        <if test = "month != 'all'">
			                    AND TO_CHAR(CARD_TRANSACTION_TIME, 'MM') = #{month}    
		                        </if>
		              )
		SELECT SUBQUERY1.RESULT AS "trans_gas", SUBQUERY2.RESULT AS "Leisure_travel_flight", SUBQUERY3.RESULT AS "mart_shopping", SUBQUERY4.RESULT AS "pet",
		        SUBQUERY5.RESULT AS "health_medical", SUBQUERY6.RESULT AS "life", SUBQUERY7.RESULT AS "food_beverage", SUBQUERY8.RESULT AS "communication"
		FROM (SELECT * 
		       FROM (SELECT SUM(RESULT) AS RESULT
		             FROM(
		                    SELECT SUM(CARD_TRANSACTION_AMOUNT) AS RESULT
		                    FROM WHOLE
		                    GROUP BY INDUSTRY_CODE
		                    HAVING INDUSTRY_CODE IN('I1', 'I2')
		             
		             UNION ALL
		             
		             -- SELECT NULL AS NUM
		             SELECT 0 AS RESULT
		             FROM DUAL))
		       WHERE RESULT IS NOT NULL OR ROWNUM = 1) SUBQUERY1,
		      
		(SELECT * 
		       FROM (SELECT SUM(RESULT) AS RESULT
		             FROM(
		                    SELECT SUM(CARD_TRANSACTION_AMOUNT) AS RESULT
		                    FROM WHOLE
		                    GROUP BY INDUSTRY_CODE
		                    HAVING INDUSTRY_CODE IN('I4', 'I5', 'I6')
		             
		             UNION ALL
		             
		             -- SELECT NULL AS NUM
		             SELECT 0 AS RESULT
		             FROM DUAL))
		       WHERE RESULT IS NOT NULL OR ROWNUM = 1) SUBQUERY2,
		      
		     (SELECT * 
		       FROM (SELECT SUM(RESULT) AS RESULT
		             FROM(
		                    SELECT SUM(CARD_TRANSACTION_AMOUNT) AS RESULT
		                    FROM WHOLE
		                    GROUP BY INDUSTRY_CODE
		                    HAVING INDUSTRY_CODE IN('I7', 'I8')
		             
		             UNION ALL
		             
		             -- SELECT NULL AS NUM
		             SELECT 0 AS RESULT
		             FROM DUAL))
		       WHERE RESULT IS NOT NULL OR ROWNUM = 1) SUBQUERY3,
		      
		     (SELECT * 
		       FROM (SELECT SUM(CARD_TRANSACTION_AMOUNT) AS RESULT
		             FROM WHOLE
		             GROUP BY INDUSTRY_CODE
		             HAVING INDUSTRY_CODE IN('I9')
		             
		             UNION ALL
		             
		             -- SELECT NULL AS NUM
		             SELECT 0 AS RESULT
		             FROM DUAL)
		       WHERE RESULT IS NOT NULL OR ROWNUM = 1) SUBQUERY4,
		      
		     (SELECT * 
		       FROM (SELECT SUM(CARD_TRANSACTION_AMOUNT) AS RESULT
		             FROM WHOLE
		             GROUP BY INDUSTRY_CODE
		             HAVING INDUSTRY_CODE IN('I10')
		             
		             UNION ALL
		             
		             -- SELECT NULL AS NUM
		             SELECT 0 AS RESULT
		             FROM DUAL)
		       WHERE RESULT IS NOT NULL OR ROWNUM = 1) SUBQUERY5,
		      
		     (SELECT * 
		       FROM (SELECT SUM(CARD_TRANSACTION_AMOUNT) AS RESULT
		             FROM WHOLE
		             GROUP BY INDUSTRY_CODE
		             HAVING INDUSTRY_CODE IN('I11')
		             
		             UNION ALL
		             
		             -- SELECT NULL AS NUM
		             SELECT 0 AS RESULT
		             FROM DUAL)
		       WHERE RESULT IS NOT NULL OR ROWNUM = 1) SUBQUERY6,
		      
		     (SELECT * 
		       FROM (SELECT SUM(CARD_TRANSACTION_AMOUNT) AS RESULT
		             FROM WHOLE
		             GROUP BY INDUSTRY_CODE
		             HAVING INDUSTRY_CODE IN('I12')
		             
		             UNION ALL
		             
		             -- SELECT NULL AS NUM
		             SELECT 0 AS RESULT
		             FROM DUAL)
		       WHERE RESULT IS NOT NULL OR ROWNUM = 1) SUBQUERY7,
		      
		     (SELECT * 
		       FROM (SELECT SUM(CARD_TRANSACTION_AMOUNT) AS RESULT
		             FROM WHOLE
		             GROUP BY INDUSTRY_CODE
		             HAVING INDUSTRY_CODE IN('I13')
		             
		             UNION ALL
		             
		             -- SELECT NULL AS NUM
		             SELECT 0 AS RESULT
		             FROM DUAL)
		       WHERE RESULT IS NOT NULL OR ROWNUM = 1) SUBQUERY8
		WHERE ROWNUM = 1

	</select>
	
	<select id = "getBottomSpecific" parameterType = "map" resultType ="MypageVO">
	
		WITH WHOLE AS( SELECT CARD_TRANSACTION_TIME, CARD_TRANSACTION_AMOUNT, CARD_TRANSACTION_CONTENT, INDUSTRY_CODE
		                FROM CARD_TRANSACTION
		                WHERE CARD_NUM IN(SELECT CARD_NUM FROM CARD_CONTRACT WHERE RESI_NUM = #{resiNum})
		                        AND TO_CHAR(CARD_TRANSACTION_TIME, 'YYYY') = #{year} 
		                        <if test = "month != 'all'">
			                    AND TO_CHAR(CARD_TRANSACTION_TIME, 'MM') = #{month}    
		                        </if>
		              )
		SELECT SUBQUERY1.RESULT AS "i1", SUBQUERY2.RESULT AS "i2", SUBQUERY3.RESULT AS "i3", SUBQUERY4.RESULT AS "i4",
		        SUBQUERY5.RESULT AS "i5", SUBQUERY6.RESULT AS "i6", SUBQUERY7.RESULT AS "i7", SUBQUERY8.RESULT AS "i8",
                SUBQUERY9.RESULT AS "i9", SUBQUERY10.RESULT AS "i10", SUBQUERY11.RESULT AS "i11", SUBQUERY12.RESULT AS "i12",
                SUBQUERY13.RESULT AS "i13"
		FROM (SELECT * 
		       FROM (SELECT SUM(CARD_TRANSACTION_AMOUNT) AS RESULT
		             FROM WHOLE
		             GROUP BY INDUSTRY_CODE
		             HAVING INDUSTRY_CODE IN('I1')
		             
		             UNION ALL
		             
		             -- SELECT NULL AS NUM
		             SELECT 0 AS RESULT
		             FROM DUAL)
		       WHERE RESULT IS NOT NULL OR ROWNUM = 1) SUBQUERY1,
               
            (SELECT * 
		       FROM (SELECT SUM(CARD_TRANSACTION_AMOUNT) AS RESULT
		             FROM WHOLE
		             GROUP BY INDUSTRY_CODE
		             HAVING INDUSTRY_CODE IN('I2')
		             
		             UNION ALL
		             
		             -- SELECT NULL AS NUM
		             SELECT 0 AS RESULT
		             FROM DUAL)
		       WHERE RESULT IS NOT NULL OR ROWNUM = 1) SUBQUERY2,
               
            (SELECT * 
		       FROM (SELECT SUM(CARD_TRANSACTION_AMOUNT) AS RESULT
		             FROM WHOLE
		             GROUP BY INDUSTRY_CODE
		             HAVING INDUSTRY_CODE IN('I3')
		             
		             UNION ALL
		             
		             -- SELECT NULL AS NUM
		             SELECT 0 AS RESULT
		             FROM DUAL)
		       WHERE RESULT IS NOT NULL OR ROWNUM = 1) SUBQUERY3,
               
               (SELECT * 
		       FROM (SELECT SUM(CARD_TRANSACTION_AMOUNT) AS RESULT
		             FROM WHOLE
		             GROUP BY INDUSTRY_CODE
		             HAVING INDUSTRY_CODE IN('I4')
		             
		             UNION ALL
		             
		             -- SELECT NULL AS NUM
		             SELECT 0 AS RESULT
		             FROM DUAL)
		       WHERE RESULT IS NOT NULL OR ROWNUM = 1) SUBQUERY4,
               
               (SELECT * 
		       FROM (SELECT SUM(CARD_TRANSACTION_AMOUNT) AS RESULT
		             FROM WHOLE
		             GROUP BY INDUSTRY_CODE
		             HAVING INDUSTRY_CODE IN('I5')
		             
		             UNION ALL
		             
		             -- SELECT NULL AS NUM
		             SELECT 0 AS RESULT
		             FROM DUAL)
		       WHERE RESULT IS NOT NULL OR ROWNUM = 1) SUBQUERY5,
               
               (SELECT * 
		       FROM (SELECT SUM(CARD_TRANSACTION_AMOUNT) AS RESULT
		             FROM WHOLE
		             GROUP BY INDUSTRY_CODE
		             HAVING INDUSTRY_CODE IN('I6')
		             
		             UNION ALL
		             
		             -- SELECT NULL AS NUM
		             SELECT 0 AS RESULT
		             FROM DUAL)
		       WHERE RESULT IS NOT NULL OR ROWNUM = 1) SUBQUERY6,
               
               (SELECT * 
		       FROM (SELECT SUM(CARD_TRANSACTION_AMOUNT) AS RESULT
		             FROM WHOLE
		             GROUP BY INDUSTRY_CODE
		             HAVING INDUSTRY_CODE IN('I7')
		             
		             UNION ALL
		             
		             -- SELECT NULL AS NUM
		             SELECT 0 AS RESULT
		             FROM DUAL)
		       WHERE RESULT IS NOT NULL OR ROWNUM = 1) SUBQUERY7,
               
               (SELECT * 
		       FROM (SELECT SUM(CARD_TRANSACTION_AMOUNT) AS RESULT
		             FROM WHOLE
		             GROUP BY INDUSTRY_CODE
		             HAVING INDUSTRY_CODE IN('I8')
		             
		             UNION ALL
		             
		             -- SELECT NULL AS NUM
		             SELECT 0 AS RESULT
		             FROM DUAL)
		       WHERE RESULT IS NOT NULL OR ROWNUM = 1) SUBQUERY8,
               
               (SELECT * 
		       FROM (SELECT SUM(CARD_TRANSACTION_AMOUNT) AS RESULT
		             FROM WHOLE
		             GROUP BY INDUSTRY_CODE
		             HAVING INDUSTRY_CODE IN('I9')
		             
		             UNION ALL
		             
		             -- SELECT NULL AS NUM
		             SELECT 0 AS RESULT
		             FROM DUAL)
		       WHERE RESULT IS NOT NULL OR ROWNUM = 1) SUBQUERY9,
               
               (SELECT * 
		       FROM (SELECT SUM(CARD_TRANSACTION_AMOUNT) AS RESULT
		             FROM WHOLE
		             GROUP BY INDUSTRY_CODE
		             HAVING INDUSTRY_CODE IN('I10')
		             
		             UNION ALL
		             
		             -- SELECT NULL AS NUM
		             SELECT 0 AS RESULT
		             FROM DUAL)
		       WHERE RESULT IS NOT NULL OR ROWNUM = 1) SUBQUERY10,
               
               (SELECT * 
		       FROM (SELECT SUM(CARD_TRANSACTION_AMOUNT) AS RESULT
		             FROM WHOLE
		             GROUP BY INDUSTRY_CODE
		             HAVING INDUSTRY_CODE IN('I11')
		             
		             UNION ALL
		             
		             -- SELECT NULL AS NUM
		             SELECT 0 AS RESULT
		             FROM DUAL)
		       WHERE RESULT IS NOT NULL OR ROWNUM = 1) SUBQUERY11,
               
               (SELECT * 
		       FROM (SELECT SUM(CARD_TRANSACTION_AMOUNT) AS RESULT
		             FROM WHOLE
		             GROUP BY INDUSTRY_CODE
		             HAVING INDUSTRY_CODE IN('I12')
		             
		             UNION ALL
		             
		             -- SELECT NULL AS NUM
		             SELECT 0 AS RESULT
		             FROM DUAL)
		       WHERE RESULT IS NOT NULL OR ROWNUM = 1) SUBQUERY12,
               
               (SELECT * 
		       FROM (SELECT SUM(CARD_TRANSACTION_AMOUNT) AS RESULT
		             FROM WHOLE
		             GROUP BY INDUSTRY_CODE
		             HAVING INDUSTRY_CODE IN('I13')
		             
		             UNION ALL
		             
		             -- SELECT NULL AS NUM
		             SELECT 0 AS RESULT
		             FROM DUAL)
		       WHERE RESULT IS NOT NULL OR ROWNUM = 1) SUBQUERY13
        WHERE ROWNUM = 1

	</select>
	
	<select id = "getBottomSpecificOpenOri" parameterType = "map" resultType ="MypageVO">
		WITH WHOLE AS (SELECT CARD_TRANSACTION_TIME, CARD_TRANSACTION_AMOUNT, CARD_TRANSACTION_CONTENT, INDUSTRY_CODE
		                FROM CARD_TRANSACTION
		                WHERE CARD_NUM IN(SELECT CARD_NUM FROM CARD_CONTRACT WHERE RESI_NUM = #{resiNum})
		                      AND TO_CHAR(CARD_TRANSACTION_TIME, 'YYYY') = #{year}
		                      <if test = "month != 'all'">
			                  AND TO_CHAR(CARD_TRANSACTION_TIME, 'MM') = #{month}    
		                      </if>
		                      
		                UNION ALL
		                
		                SELECT CARD_TRANSACTION_TIME, CARD_TRANSACTION_AMOUNT, CARD_TRANSACTION_CONTENT, INDUSTRY_CODE
		                 FROM OPEN_CARD_TRANSACTION     
		                 WHERE RESI_NUM = #{resiNum}
		                 <!-- WHERE RESI_NUM = '9203101937988' -->
		                      AND TO_CHAR(CARD_TRANSACTION_TIME, 'YYYY') = #{year} 
		                      AND MEANS IN(${cardListString})
		                      <if test = "month != 'all'">
			                  AND TO_CHAR(CARD_TRANSACTION_TIME, 'MM') = #{month}    
		                      </if>
		                )
		SELECT SUBQUERY1.RESULT AS "trans_gas", SUBQUERY2.RESULT AS "Leisure_travel_flight", SUBQUERY3.RESULT AS "mart_shopping", SUBQUERY4.RESULT AS "pet",
		        SUBQUERY5.RESULT AS "health_medical", SUBQUERY6.RESULT AS "life", SUBQUERY7.RESULT AS "food_beverage", SUBQUERY8.RESULT AS "communication"
		FROM (SELECT * 
		       FROM (SELECT SUM(RESULT) AS RESULT
		             FROM(
		                    SELECT SUM(CARD_TRANSACTION_AMOUNT) AS RESULT
		                    FROM WHOLE
		                    GROUP BY INDUSTRY_CODE
		                    HAVING INDUSTRY_CODE IN('I1', 'I2')
		             
		             UNION ALL
		             
		             -- SELECT NULL AS NUM
		             SELECT 0 AS RESULT
		             FROM DUAL))
		       WHERE RESULT IS NOT NULL OR ROWNUM = 1) SUBQUERY1,
		      
		(SELECT * 
		       FROM (SELECT SUM(RESULT) AS RESULT
		             FROM(
		                    SELECT SUM(CARD_TRANSACTION_AMOUNT) AS RESULT
		                    FROM WHOLE
		                    GROUP BY INDUSTRY_CODE
		                    HAVING INDUSTRY_CODE IN('I4', 'I5', 'I6')
		             
		             UNION ALL
		             
		             -- SELECT NULL AS NUM
		             SELECT 0 AS RESULT
		             FROM DUAL))
		       WHERE RESULT IS NOT NULL OR ROWNUM = 1) SUBQUERY2,
		      
		     (SELECT * 
		       FROM (SELECT SUM(RESULT) AS RESULT
		             FROM(
		                    SELECT SUM(CARD_TRANSACTION_AMOUNT) AS RESULT
		                    FROM WHOLE
		                    GROUP BY INDUSTRY_CODE
		                    HAVING INDUSTRY_CODE IN('I7', 'I8')
		             
		             UNION ALL
		             
		             -- SELECT NULL AS NUM
		             SELECT 0 AS RESULT
		             FROM DUAL))
		       WHERE RESULT IS NOT NULL OR ROWNUM = 1) SUBQUERY3,
		      
		     (SELECT * 
		       FROM (SELECT SUM(CARD_TRANSACTION_AMOUNT) AS RESULT
		             FROM WHOLE
		             GROUP BY INDUSTRY_CODE
		             HAVING INDUSTRY_CODE IN('I9')
		             
		             UNION ALL
		             
		             -- SELECT NULL AS NUM
		             SELECT 0 AS RESULT
		             FROM DUAL)
		       WHERE RESULT IS NOT NULL OR ROWNUM = 1) SUBQUERY4,
		      
		     (SELECT * 
		       FROM (SELECT SUM(CARD_TRANSACTION_AMOUNT) AS RESULT
		             FROM WHOLE
		             GROUP BY INDUSTRY_CODE
		             HAVING INDUSTRY_CODE IN('I10')
		             
		             UNION ALL
		             
		             -- SELECT NULL AS NUM
		             SELECT 0 AS RESULT
		             FROM DUAL)
		       WHERE RESULT IS NOT NULL OR ROWNUM = 1) SUBQUERY5,
		      
		     (SELECT * 
		       FROM (SELECT SUM(CARD_TRANSACTION_AMOUNT) AS RESULT
		             FROM WHOLE
		             GROUP BY INDUSTRY_CODE
		             HAVING INDUSTRY_CODE IN('I11')
		             
		             UNION ALL
		             
		             -- SELECT NULL AS NUM
		             SELECT 0 AS RESULT
		             FROM DUAL)
		       WHERE RESULT IS NOT NULL OR ROWNUM = 1) SUBQUERY6,
		      
		     (SELECT * 
		       FROM (SELECT SUM(CARD_TRANSACTION_AMOUNT) AS RESULT
		             FROM WHOLE
		             GROUP BY INDUSTRY_CODE
		             HAVING INDUSTRY_CODE IN('I12')
		             
		             UNION ALL
		             
		             -- SELECT NULL AS NUM
		             SELECT 0 AS RESULT
		             FROM DUAL)
		       WHERE RESULT IS NOT NULL OR ROWNUM = 1) SUBQUERY7,
		      
		     (SELECT * 
		       FROM (SELECT SUM(CARD_TRANSACTION_AMOUNT) AS RESULT
		             FROM WHOLE
		             GROUP BY INDUSTRY_CODE
		             HAVING INDUSTRY_CODE IN('I13')
		             
		             UNION ALL
		             
		             -- SELECT NULL AS NUM
		             SELECT 0 AS RESULT
		             FROM DUAL)
		       WHERE RESULT IS NOT NULL OR ROWNUM = 1) SUBQUERY8
		WHERE ROWNUM = 1
	</select>
	
	
	<select id = "getBottomSpecificOpen" parameterType = "map" resultType ="MypageVO">
		WITH WHOLE AS (SELECT CARD_TRANSACTION_TIME, CARD_TRANSACTION_AMOUNT, CARD_TRANSACTION_CONTENT, INDUSTRY_CODE
		                FROM CARD_TRANSACTION
		                WHERE CARD_NUM IN(SELECT CARD_NUM FROM CARD_CONTRACT WHERE RESI_NUM = #{resiNum})
		                      AND TO_CHAR(CARD_TRANSACTION_TIME, 'YYYY') = #{year}
		                      <if test = "month != 'all'">
			                  AND TO_CHAR(CARD_TRANSACTION_TIME, 'MM') = #{month}    
		                      </if>
		                      
		                UNION ALL
		                
		                SELECT CARD_TRANSACTION_TIME, CARD_TRANSACTION_AMOUNT, CARD_TRANSACTION_CONTENT, INDUSTRY_CODE
		                 FROM OPEN_CARD_TRANSACTION     
		                 WHERE RESI_NUM = #{resiNum}
		                 <!-- WHERE RESI_NUM = '9203101937988' -->
		                      AND TO_CHAR(CARD_TRANSACTION_TIME, 'YYYY') = #{year} 
		                      AND MEANS IN(${cardListString})
		                      <if test = "month != 'all'">
			                  AND TO_CHAR(CARD_TRANSACTION_TIME, 'MM') = #{month}    
		                      </if>
		                )
				SELECT SUBQUERY1.RESULT AS "i1", SUBQUERY2.RESULT AS "i2", SUBQUERY3.RESULT AS "i3", SUBQUERY4.RESULT AS "i4",
		        SUBQUERY5.RESULT AS "i5", SUBQUERY6.RESULT AS "i6", SUBQUERY7.RESULT AS "i7", SUBQUERY8.RESULT AS "i8",
                SUBQUERY9.RESULT AS "i9", SUBQUERY10.RESULT AS "i10", SUBQUERY11.RESULT AS "i11", SUBQUERY12.RESULT AS "i12",
                SUBQUERY13.RESULT AS "i13"
		FROM (SELECT * 
		       FROM (SELECT SUM(CARD_TRANSACTION_AMOUNT) AS RESULT
		             FROM WHOLE
		             GROUP BY INDUSTRY_CODE
		             HAVING INDUSTRY_CODE IN('I1')
		             
		             UNION ALL
		             
		             -- SELECT NULL AS NUM
		             SELECT 0 AS RESULT
		             FROM DUAL)
		       WHERE RESULT IS NOT NULL OR ROWNUM = 1) SUBQUERY1,
               
            (SELECT * 
		       FROM (SELECT SUM(CARD_TRANSACTION_AMOUNT) AS RESULT
		             FROM WHOLE
		             GROUP BY INDUSTRY_CODE
		             HAVING INDUSTRY_CODE IN('I2')
		             
		             UNION ALL
		             
		             -- SELECT NULL AS NUM
		             SELECT 0 AS RESULT
		             FROM DUAL)
		       WHERE RESULT IS NOT NULL OR ROWNUM = 1) SUBQUERY2,
               
            (SELECT * 
		       FROM (SELECT SUM(CARD_TRANSACTION_AMOUNT) AS RESULT
		             FROM WHOLE
		             GROUP BY INDUSTRY_CODE
		             HAVING INDUSTRY_CODE IN('I3')
		             
		             UNION ALL
		             
		             -- SELECT NULL AS NUM
		             SELECT 0 AS RESULT
		             FROM DUAL)
		       WHERE RESULT IS NOT NULL OR ROWNUM = 1) SUBQUERY3,
               
               (SELECT * 
		       FROM (SELECT SUM(CARD_TRANSACTION_AMOUNT) AS RESULT
		             FROM WHOLE
		             GROUP BY INDUSTRY_CODE
		             HAVING INDUSTRY_CODE IN('I4')
		             
		             UNION ALL
		             
		             -- SELECT NULL AS NUM
		             SELECT 0 AS RESULT
		             FROM DUAL)
		       WHERE RESULT IS NOT NULL OR ROWNUM = 1) SUBQUERY4,
               
               (SELECT * 
		       FROM (SELECT SUM(CARD_TRANSACTION_AMOUNT) AS RESULT
		             FROM WHOLE
		             GROUP BY INDUSTRY_CODE
		             HAVING INDUSTRY_CODE IN('I5')
		             
		             UNION ALL
		             
		             -- SELECT NULL AS NUM
		             SELECT 0 AS RESULT
		             FROM DUAL)
		       WHERE RESULT IS NOT NULL OR ROWNUM = 1) SUBQUERY5,
               
               (SELECT * 
		       FROM (SELECT SUM(CARD_TRANSACTION_AMOUNT) AS RESULT
		             FROM WHOLE
		             GROUP BY INDUSTRY_CODE
		             HAVING INDUSTRY_CODE IN('I6')
		             
		             UNION ALL
		             
		             -- SELECT NULL AS NUM
		             SELECT 0 AS RESULT
		             FROM DUAL)
		       WHERE RESULT IS NOT NULL OR ROWNUM = 1) SUBQUERY6,
               
               (SELECT * 
		       FROM (SELECT SUM(CARD_TRANSACTION_AMOUNT) AS RESULT
		             FROM WHOLE
		             GROUP BY INDUSTRY_CODE
		             HAVING INDUSTRY_CODE IN('I7')
		             
		             UNION ALL
		             
		             -- SELECT NULL AS NUM
		             SELECT 0 AS RESULT
		             FROM DUAL)
		       WHERE RESULT IS NOT NULL OR ROWNUM = 1) SUBQUERY7,
               
               (SELECT * 
		       FROM (SELECT SUM(CARD_TRANSACTION_AMOUNT) AS RESULT
		             FROM WHOLE
		             GROUP BY INDUSTRY_CODE
		             HAVING INDUSTRY_CODE IN('I8')
		             
		             UNION ALL
		             
		             -- SELECT NULL AS NUM
		             SELECT 0 AS RESULT
		             FROM DUAL)
		       WHERE RESULT IS NOT NULL OR ROWNUM = 1) SUBQUERY8,
               
               (SELECT * 
		       FROM (SELECT SUM(CARD_TRANSACTION_AMOUNT) AS RESULT
		             FROM WHOLE
		             GROUP BY INDUSTRY_CODE
		             HAVING INDUSTRY_CODE IN('I9')
		             
		             UNION ALL
		             
		             -- SELECT NULL AS NUM
		             SELECT 0 AS RESULT
		             FROM DUAL)
		       WHERE RESULT IS NOT NULL OR ROWNUM = 1) SUBQUERY9,
               
               (SELECT * 
		       FROM (SELECT SUM(CARD_TRANSACTION_AMOUNT) AS RESULT
		             FROM WHOLE
		             GROUP BY INDUSTRY_CODE
		             HAVING INDUSTRY_CODE IN('I10')
		             
		             UNION ALL
		             
		             -- SELECT NULL AS NUM
		             SELECT 0 AS RESULT
		             FROM DUAL)
		       WHERE RESULT IS NOT NULL OR ROWNUM = 1) SUBQUERY10,
               
               (SELECT * 
		       FROM (SELECT SUM(CARD_TRANSACTION_AMOUNT) AS RESULT
		             FROM WHOLE
		             GROUP BY INDUSTRY_CODE
		             HAVING INDUSTRY_CODE IN('I11')
		             
		             UNION ALL
		             
		             -- SELECT NULL AS NUM
		             SELECT 0 AS RESULT
		             FROM DUAL)
		       WHERE RESULT IS NOT NULL OR ROWNUM = 1) SUBQUERY11,
               
               (SELECT * 
		       FROM (SELECT SUM(CARD_TRANSACTION_AMOUNT) AS RESULT
		             FROM WHOLE
		             GROUP BY INDUSTRY_CODE
		             HAVING INDUSTRY_CODE IN('I12')
		             
		             UNION ALL
		             
		             -- SELECT NULL AS NUM
		             SELECT 0 AS RESULT
		             FROM DUAL)
		       WHERE RESULT IS NOT NULL OR ROWNUM = 1) SUBQUERY12,
               
               (SELECT * 
		       FROM (SELECT SUM(CARD_TRANSACTION_AMOUNT) AS RESULT
		             FROM WHOLE
		             GROUP BY INDUSTRY_CODE
		             HAVING INDUSTRY_CODE IN('I13')
		             
		             UNION ALL
		             
		             -- SELECT NULL AS NUM
		             SELECT 0 AS RESULT
		             FROM DUAL)
		       WHERE RESULT IS NOT NULL OR ROWNUM = 1) SUBQUERY13
        WHERE ROWNUM = 1
	</select>


	<update id = "doUpdateLink" parameterType = "map">
		UPDATE MEMBER SET CSH = #{csh}, CSS = #{css}, CHD = #{chd} , CKM = #{ckm}, CLT = #{clt} , 
                         CWR = #{cwr}, CBC = #{cbc}, CCT = #{cct}, CNH = #{cnh}, CSHB = #{cshb} , 
                         CKJB = #{ckjb} , CJBB = #{cjbb}, CJJB = #{cjjb}
                     WHERE ID = #{id}
	</update>

</mapper>