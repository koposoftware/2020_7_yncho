/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.36
 * Generated at: 2020-09-30 06:07:27 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.jsp.include;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class footer_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("  \r\n");
      out.write("    <div class=\"footer\">\r\n");
      out.write("    \r\n");
      out.write("    \r\n");
      out.write("      <div class=\"container\">\r\n");
      out.write("        <div class=\"row\">\r\n");
      out.write("          <div class=\"col-lg-3\">\r\n");
      out.write("            <p class=\"mb-4\"><img src=\"/hanacard-spring-mvc/resources/images/logo_foot.png\" alt=\"Image\" class=\"img-fluid\"></p>\r\n");
      out.write("            <!-- <p class=\"mb-4\"><img src=\"/hanacard-spring-mvc/resources/images/logo.png\" alt=\"Image\" class=\"img-fluid\"></p> -->\r\n");
      out.write("            <p>Smart Life를 선도하는 Smart 금융, INNOVATOR by Hana Card.</p>  \r\n");
      out.write("            <p><a href=\"#\">hanacard</a></p>\r\n");
      out.write("          </div>\r\n");
      out.write("          <div class=\"col-lg-3\">\r\n");
      out.write("            <h3 class=\"footer-heading\"><span>나만의차트</span></h3>\r\n");
      out.write("            <ul class=\"list-unstyled\">\r\n");
      out.write("                <li><a href=\"#\">통합순위</a></li>\r\n");
      out.write("                <li><a href=\"#\">할인순위</a></li>\r\n");
      out.write("                <li><a href=\"#\">적립순위</a></li>\r\n");
      out.write("                <li><a href=\"#\">마일리지순위</a></li>\r\n");
      out.write("            </ul>\r\n");
      out.write("          </div>\r\n");
      out.write("          <div class=\"col-lg-3\">\r\n");
      out.write("              <h3 class=\"footer-heading\"><span>하나차트</span></h3>\r\n");
      out.write("              <ul class=\"list-unstyled\">\r\n");
      out.write("                  <li><a href=\"#\">인기혜택별순위</a></li>\r\n");
      out.write("                  <li><a href=\"#\">연령대별순위</a></li>\r\n");
      out.write("                  <li><a href=\"#\">연회비별순위</a></li>\r\n");
      out.write("                  <li><a href=\"#\">카드타입별순위</a></li>\r\n");
      out.write("              </ul>\r\n");
      out.write("          </div>\r\n");
      out.write("          <div class=\"col-lg-3\">\r\n");
      out.write("              <h3 class=\"footer-heading\"><span>고객센터</span></h3>\r\n");
      out.write("              <ul class=\"list-unstyled\">\r\n");
      out.write("                  <li><a href=\"#\">자주묻는질문</a></li>\r\n");
      out.write("                  <li><a href=\"#\">Q&A</a></li>\r\n");
      out.write("              </ul>\r\n");
      out.write("          </div>\r\n");
      out.write("        </div>\r\n");
      out.write("\r\n");
      out.write("        <div class=\"row\">\r\n");
      out.write("          <div class=\"col-12\">\r\n");
      out.write("            <div class=\"copyright\">\r\n");
      out.write("            \r\n");
      out.write("            \t<p>\r\n");
      out.write("            \t\t서울특별시 중구 을지로 66 | 대표이사 : 장경훈 | 사업자번호 104-86-56659\r\n");
      out.write("            \t</p>\r\n");
      out.write("            \t<p>\r\n");
      out.write("            \t\tCOPYRIGHTⓒ 2020 Hana Card. All RIGHTS RESERVED\r\n");
      out.write("            \t</p>\r\n");
      out.write("                <!-- <p>\r\n");
      out.write("                    Link back to Colorlib can't be removed. Template is licensed under CC BY 3.0.\r\n");
      out.write("                    Copyright &copy;<script>document.write(new Date().getFullYear());</script> All rights reserved | This template is made with <i class=\"icon-heart\" aria-hidden=\"true\"></i> by <a href=\"https://colorlib.com\" target=\"_blank\" >Colorlib</a>\r\n");
      out.write("                    Link back to Colorlib can't be removed. Template is licensed under CC BY 3.0.\r\n");
      out.write("                </p> -->\r\n");
      out.write("            </div>\r\n");
      out.write("          </div>\r\n");
      out.write("        </div>\r\n");
      out.write("      </div> \r\n");
      out.write("      \r\n");
      out.write("\r\n");
      out.write("      \r\n");
      out.write("      \r\n");
      out.write("      \r\n");
      out.write("      \r\n");
      out.write("    </div>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
